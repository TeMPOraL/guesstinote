/* css/components/histogram.css */
/* Styles specific to the histogram display */

.histogram-container {
    display: flex; /* Was inline-flex, flex is fine if parent is column and handles alignment */
    align-items: flex-end;
    height: 40px;  /* Default height */
    width: 80px;   /* Fixed width for inline histograms */
    /* min-width: 30px; Replaced by fixed width */
    margin-left: 0; /* No longer needed if aligned by flex parent */
    border-left: 1px solid #ccc;
    border-bottom: 1px solid #ccc;
    padding-top: 2px; /* Space for bars not to touch top if border added there */
    box-sizing: border-box;
    background-color: #fdfdfd; /* Light background for the histogram area */
}

.histogram-bar {
    background-color: #3273dc; /* Bulma's primary color */
    margin-right: 1px; /* Space between bars */
    flex-basis: 3px; /* Default width of a bar if not growing */
    flex-grow: 1;    /* Allow bars to share space in full-width */
    min-width: 1px;  /* Prevent bars from disappearing */
}
.histogram-bar:last-child {
    margin-right: 0;
}

/* Styles for full-width histograms */
g-cell[full-width-active] .histogram-container, 
g-ref[full-width-active] .histogram-container { /* Changed selector */
    height: 130px; /* Updated height for full-width */
    width: 100%;  /* Take full available width */
    margin-top: 5px; /* Add some space above when it's block display */
}

/* In full-width, bars will grow to fill the container.
   No specific change needed for .histogram-bar itself for full-width height,
   as its height is controlled by its content (which is set by JS).
   The container height dictates the available space.
*/
